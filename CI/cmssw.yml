cmssw-setup:
  tags: [ k8s-cvmfs ]
  image: gitlab-registry.cern.ch/ci-tools/ci-worker:cs8
  stage: cmssw-setup 
  needs : [synth]
  dependencies : [synth]
  before_script:
    - yum install -q -y python3 python3-virtualenv mesa-libGL-devel mesa-libGLU-devel libXpm-devel openssl-devel ncurses-compat-libs 
    - source /cvmfs/grid.cern.ch/etc/profile.d/setup-cvmfs-ui.sh
    - source /cvmfs/cms.cern.ch/cmsset_default.sh
  script:
    - ./CI/setup_cmssw.sh -run ${CMSSW_VERSION} ${CMSSW_L1CT} ${CMSSW_L1CT_TAG} ${CMSSW_PR}
  timeout: 2h
  artifacts:
    when: always
    paths:
      - ${CMSSW_VERSION}/src/FastPUPPI/NtupleProducer/python/jetTuple.root
      - ${CMSSW_VERSION}/cmsRun.log
      - ${CMSSW_VERSION}/compilation.log

code-checks:
  tags: [ k8s-cvmfs ]
  image: gitlab-registry.cern.ch/ci-tools/ci-worker:c8
  stage: cmssw-setup 
  before_script:
    - yum install -q -y python3 python3-virtualenv mesa-libGL-devel mesa-libGLU-devel libXpm-devel openssl-devel ncurses-compat-libs 
    - source /cvmfs/grid.cern.ch/etc/profile.d/setup-cvmfs-ui.sh
    - source /cvmfs/cms.cern.ch/cmsset_default.sh
  script:
    - ./CI/setup_cmssw.sh -checkout ${CMSSW_VERSION} ${CMSSW_L1CT} ${CMSSW_L1CT_TAG} ${CMSSW_PR}
    - cd ${CMSSW_VERSION}/src
    - eval $(scram runtime -sh)
    - scram b -k -j 4 code-checks > code-checks.log 2> code-checks.err || true;
    - echo "CODE CHECKS"
    - perl -ne 'm{ParticleFlow/.*(warning|error):} and print;' code-checks.log
    - perl -e '$errs=0; while(<>) { m{ParticleFlow/.*error:} and $errs=1}; exit $errs;' code-checks.log
    - scram b -k -j 4 code-format > /dev/null || true;
    - git diff -- DataFormats/L1TParticleFlow L1Trigger/Phase2L1ParticleFlow > code-format.patch
    - echo "SUMMARY OF CODE FORMAT CHANGES"
    - git diff --exit-code --numstat -- DataFormats/L1TParticleFlow L1Trigger/Phase2L1ParticleFlow 
  allow_failure: true
  artifacts:
    when: always
    paths:
      - ${CMSSW_VERSION}/src/code-checks.*
      - ${CMSSW_VERSION}/src/code-format.*
