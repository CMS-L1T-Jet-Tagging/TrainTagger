// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module JetTaggerNN_relu_ap_fixed_30_14_5_3_0_ap_ufixed_9_0_4_0_0_relu_config21_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [21:0] p_read;
input  [21:0] p_read1;
input  [21:0] p_read2;
input  [21:0] p_read3;
input  [21:0] p_read4;
input  [21:0] p_read5;
input  [21:0] p_read6;
input  [21:0] p_read7;
input  [21:0] p_read8;
output  [8:0] ap_return_0;
output  [8:0] ap_return_1;
output  [8:0] ap_return_2;
output  [8:0] ap_return_3;
output  [8:0] ap_return_4;
output  [8:0] ap_return_5;
output  [8:0] ap_return_6;
output  [8:0] ap_return_7;
output  [8:0] ap_return_8;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] ap_return_0;
reg[8:0] ap_return_1;
reg[8:0] ap_return_2;
reg[8:0] ap_return_3;
reg[8:0] ap_return_4;
reg[8:0] ap_return_5;
reg[8:0] ap_return_6;
reg[8:0] ap_return_7;
reg[8:0] ap_return_8;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [21:0] p_read817_reg_1293;
reg    ap_block_pp0_stage0_11001;
reg   [21:0] p_read716_reg_1302;
reg   [21:0] p_read615_reg_1311;
reg   [21:0] p_read514_reg_1320;
reg   [21:0] p_read413_reg_1329;
reg   [21:0] p_read312_reg_1338;
reg   [21:0] p_read211_reg_1347;
reg   [21:0] p_read110_reg_1356;
reg   [21:0] p_read_164_reg_1365;
wire   [0:0] r_fu_118_p2;
reg   [0:0] r_reg_1374;
wire   [0:0] Range1_all_ones_fu_134_p2;
reg   [0:0] Range1_all_ones_reg_1379;
wire   [0:0] Range1_all_zeros_fu_140_p2;
reg   [0:0] Range1_all_zeros_reg_1384;
wire   [0:0] r_160_fu_150_p2;
reg   [0:0] r_160_reg_1390;
wire   [0:0] Range1_all_ones_160_fu_166_p2;
reg   [0:0] Range1_all_ones_160_reg_1395;
wire   [0:0] Range1_all_zeros_160_fu_172_p2;
reg   [0:0] Range1_all_zeros_160_reg_1400;
wire   [0:0] r_161_fu_182_p2;
reg   [0:0] r_161_reg_1406;
wire   [0:0] Range1_all_ones_161_fu_198_p2;
reg   [0:0] Range1_all_ones_161_reg_1411;
wire   [0:0] Range1_all_zeros_161_fu_204_p2;
reg   [0:0] Range1_all_zeros_161_reg_1416;
wire   [0:0] r_162_fu_214_p2;
reg   [0:0] r_162_reg_1422;
wire   [0:0] Range1_all_ones_162_fu_230_p2;
reg   [0:0] Range1_all_ones_162_reg_1427;
wire   [0:0] Range1_all_zeros_162_fu_236_p2;
reg   [0:0] Range1_all_zeros_162_reg_1432;
wire   [0:0] r_163_fu_246_p2;
reg   [0:0] r_163_reg_1438;
wire   [0:0] Range1_all_ones_163_fu_262_p2;
reg   [0:0] Range1_all_ones_163_reg_1443;
wire   [0:0] Range1_all_zeros_163_fu_268_p2;
reg   [0:0] Range1_all_zeros_163_reg_1448;
wire   [0:0] r_164_fu_278_p2;
reg   [0:0] r_164_reg_1454;
wire   [0:0] Range1_all_ones_164_fu_294_p2;
reg   [0:0] Range1_all_ones_164_reg_1459;
wire   [0:0] Range1_all_zeros_164_fu_300_p2;
reg   [0:0] Range1_all_zeros_164_reg_1464;
wire   [0:0] r_165_fu_310_p2;
reg   [0:0] r_165_reg_1470;
wire   [0:0] Range1_all_ones_165_fu_326_p2;
reg   [0:0] Range1_all_ones_165_reg_1475;
wire   [0:0] Range1_all_zeros_165_fu_332_p2;
reg   [0:0] Range1_all_zeros_165_reg_1480;
wire   [0:0] r_166_fu_342_p2;
reg   [0:0] r_166_reg_1486;
wire   [0:0] Range1_all_ones_166_fu_358_p2;
reg   [0:0] Range1_all_ones_166_reg_1491;
wire   [0:0] Range1_all_zeros_166_fu_364_p2;
reg   [0:0] Range1_all_zeros_166_reg_1496;
wire   [0:0] r_167_fu_374_p2;
reg   [0:0] r_167_reg_1502;
wire   [0:0] Range1_all_ones_167_fu_390_p2;
reg   [0:0] Range1_all_ones_167_reg_1507;
wire   [0:0] Range1_all_zeros_167_fu_396_p2;
reg   [0:0] Range1_all_zeros_167_reg_1512;
wire    ap_block_pp0_stage0;
wire   [5:0] trunc_ln828_fu_114_p1;
wire   [5:0] tmp_s_fu_124_p4;
wire   [5:0] trunc_ln828_160_fu_146_p1;
wire   [5:0] tmp_180_fu_156_p4;
wire   [5:0] trunc_ln828_161_fu_178_p1;
wire   [5:0] tmp_181_fu_188_p4;
wire   [5:0] trunc_ln828_162_fu_210_p1;
wire   [5:0] tmp_182_fu_220_p4;
wire   [5:0] trunc_ln828_163_fu_242_p1;
wire   [5:0] tmp_183_fu_252_p4;
wire   [5:0] trunc_ln828_164_fu_274_p1;
wire   [5:0] tmp_184_fu_284_p4;
wire   [5:0] trunc_ln828_165_fu_306_p1;
wire   [5:0] tmp_185_fu_316_p4;
wire   [5:0] trunc_ln828_166_fu_338_p1;
wire   [5:0] tmp_186_fu_348_p4;
wire   [5:0] trunc_ln828_167_fu_370_p1;
wire   [5:0] tmp_187_fu_380_p4;
wire   [0:0] p_Result_s_fu_416_p3;
wire   [0:0] or_ln374_fu_437_p2;
wire   [0:0] p_Result_850_fu_423_p3;
wire   [0:0] and_ln374_fu_442_p2;
wire   [8:0] p_Val2_s_fu_407_p4;
wire   [8:0] zext_ln377_fu_448_p1;
wire   [8:0] p_Val2_329_fu_452_p2;
wire   [0:0] tmp_fu_458_p3;
wire   [0:0] p_Result_851_fu_430_p3;
wire   [0:0] select_ln888_fu_466_p3;
wire   [0:0] deleted_zeros_fu_472_p3;
wire   [0:0] icmp_ln1649_fu_402_p2;
wire   [8:0] select_ln302_fu_479_p3;
wire   [0:0] p_Result_828_fu_509_p3;
wire   [0:0] or_ln374_160_fu_530_p2;
wire   [0:0] p_Result_852_fu_516_p3;
wire   [0:0] and_ln374_160_fu_535_p2;
wire   [8:0] p_Val2_330_fu_500_p4;
wire   [8:0] zext_ln377_160_fu_541_p1;
wire   [8:0] p_Val2_331_fu_545_p2;
wire   [0:0] tmp_814_fu_551_p3;
wire   [0:0] p_Result_853_fu_523_p3;
wire   [0:0] select_ln888_160_fu_559_p3;
wire   [0:0] deleted_zeros_160_fu_565_p3;
wire   [0:0] icmp_ln1649_160_fu_495_p2;
wire   [8:0] select_ln302_160_fu_572_p3;
wire   [0:0] p_Result_831_fu_602_p3;
wire   [0:0] or_ln374_161_fu_623_p2;
wire   [0:0] p_Result_854_fu_609_p3;
wire   [0:0] and_ln374_161_fu_628_p2;
wire   [8:0] p_Val2_332_fu_593_p4;
wire   [8:0] zext_ln377_161_fu_634_p1;
wire   [8:0] p_Val2_333_fu_638_p2;
wire   [0:0] tmp_818_fu_644_p3;
wire   [0:0] p_Result_855_fu_616_p3;
wire   [0:0] select_ln888_161_fu_652_p3;
wire   [0:0] deleted_zeros_161_fu_658_p3;
wire   [0:0] icmp_ln1649_161_fu_588_p2;
wire   [8:0] select_ln302_161_fu_665_p3;
wire   [0:0] p_Result_834_fu_695_p3;
wire   [0:0] or_ln374_162_fu_716_p2;
wire   [0:0] p_Result_856_fu_702_p3;
wire   [0:0] and_ln374_162_fu_721_p2;
wire   [8:0] p_Val2_334_fu_686_p4;
wire   [8:0] zext_ln377_162_fu_727_p1;
wire   [8:0] p_Val2_335_fu_731_p2;
wire   [0:0] tmp_822_fu_737_p3;
wire   [0:0] p_Result_857_fu_709_p3;
wire   [0:0] select_ln888_162_fu_745_p3;
wire   [0:0] deleted_zeros_162_fu_751_p3;
wire   [0:0] icmp_ln1649_162_fu_681_p2;
wire   [8:0] select_ln302_162_fu_758_p3;
wire   [0:0] p_Result_837_fu_788_p3;
wire   [0:0] or_ln374_163_fu_809_p2;
wire   [0:0] p_Result_858_fu_795_p3;
wire   [0:0] and_ln374_163_fu_814_p2;
wire   [8:0] p_Val2_336_fu_779_p4;
wire   [8:0] zext_ln377_163_fu_820_p1;
wire   [8:0] p_Val2_337_fu_824_p2;
wire   [0:0] tmp_826_fu_830_p3;
wire   [0:0] p_Result_859_fu_802_p3;
wire   [0:0] select_ln888_163_fu_838_p3;
wire   [0:0] deleted_zeros_163_fu_844_p3;
wire   [0:0] icmp_ln1649_163_fu_774_p2;
wire   [8:0] select_ln302_163_fu_851_p3;
wire   [0:0] p_Result_840_fu_881_p3;
wire   [0:0] or_ln374_164_fu_902_p2;
wire   [0:0] p_Result_860_fu_888_p3;
wire   [0:0] and_ln374_164_fu_907_p2;
wire   [8:0] p_Val2_338_fu_872_p4;
wire   [8:0] zext_ln377_164_fu_913_p1;
wire   [8:0] p_Val2_339_fu_917_p2;
wire   [0:0] tmp_830_fu_923_p3;
wire   [0:0] p_Result_861_fu_895_p3;
wire   [0:0] select_ln888_164_fu_931_p3;
wire   [0:0] deleted_zeros_164_fu_937_p3;
wire   [0:0] icmp_ln1649_164_fu_867_p2;
wire   [8:0] select_ln302_164_fu_944_p3;
wire   [0:0] p_Result_843_fu_974_p3;
wire   [0:0] or_ln374_165_fu_995_p2;
wire   [0:0] p_Result_862_fu_981_p3;
wire   [0:0] and_ln374_165_fu_1000_p2;
wire   [8:0] p_Val2_340_fu_965_p4;
wire   [8:0] zext_ln377_165_fu_1006_p1;
wire   [8:0] p_Val2_341_fu_1010_p2;
wire   [0:0] tmp_834_fu_1016_p3;
wire   [0:0] p_Result_863_fu_988_p3;
wire   [0:0] select_ln888_165_fu_1024_p3;
wire   [0:0] deleted_zeros_165_fu_1030_p3;
wire   [0:0] icmp_ln1649_165_fu_960_p2;
wire   [8:0] select_ln302_165_fu_1037_p3;
wire   [0:0] p_Result_846_fu_1067_p3;
wire   [0:0] or_ln374_166_fu_1088_p2;
wire   [0:0] p_Result_864_fu_1074_p3;
wire   [0:0] and_ln374_166_fu_1093_p2;
wire   [8:0] p_Val2_342_fu_1058_p4;
wire   [8:0] zext_ln377_166_fu_1099_p1;
wire   [8:0] p_Val2_343_fu_1103_p2;
wire   [0:0] tmp_838_fu_1109_p3;
wire   [0:0] p_Result_865_fu_1081_p3;
wire   [0:0] select_ln888_166_fu_1117_p3;
wire   [0:0] deleted_zeros_166_fu_1123_p3;
wire   [0:0] icmp_ln1649_166_fu_1053_p2;
wire   [8:0] select_ln302_166_fu_1130_p3;
wire   [0:0] p_Result_849_fu_1160_p3;
wire   [0:0] or_ln374_167_fu_1181_p2;
wire   [0:0] p_Result_866_fu_1167_p3;
wire   [0:0] and_ln374_167_fu_1186_p2;
wire   [8:0] p_Val2_344_fu_1151_p4;
wire   [8:0] zext_ln377_167_fu_1192_p1;
wire   [8:0] p_Val2_345_fu_1196_p2;
wire   [0:0] tmp_842_fu_1202_p3;
wire   [0:0] p_Result_867_fu_1174_p3;
wire   [0:0] select_ln888_167_fu_1210_p3;
wire   [0:0] deleted_zeros_167_fu_1216_p3;
wire   [0:0] icmp_ln1649_167_fu_1146_p2;
wire   [8:0] select_ln302_167_fu_1223_p3;
wire   [8:0] select_ln1649_fu_487_p3;
wire   [8:0] select_ln1649_160_fu_580_p3;
wire   [8:0] select_ln1649_161_fu_673_p3;
wire   [8:0] select_ln1649_162_fu_766_p3;
wire   [8:0] select_ln1649_163_fu_859_p3;
wire   [8:0] select_ln1649_164_fu_952_p3;
wire   [8:0] select_ln1649_165_fu_1045_p3;
wire   [8:0] select_ln1649_166_fu_1138_p3;
wire   [8:0] select_ln1649_167_fu_1231_p3;
reg   [8:0] ap_return_0_preg;
reg   [8:0] ap_return_1_preg;
reg   [8:0] ap_return_2_preg;
reg   [8:0] ap_return_3_preg;
reg   [8:0] ap_return_4_preg;
reg   [8:0] ap_return_5_preg;
reg   [8:0] ap_return_6_preg;
reg   [8:0] ap_return_7_preg;
reg   [8:0] ap_return_8_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_return_0_preg = 9'd0;
#0 ap_return_1_preg = 9'd0;
#0 ap_return_2_preg = 9'd0;
#0 ap_return_3_preg = 9'd0;
#0 ap_return_4_preg = 9'd0;
#0 ap_return_5_preg = 9'd0;
#0 ap_return_6_preg = 9'd0;
#0 ap_return_7_preg = 9'd0;
#0 ap_return_8_preg = 9'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_0_preg <= select_ln1649_fu_487_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_1_preg <= select_ln1649_160_fu_580_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_2_preg <= select_ln1649_161_fu_673_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_3_preg <= select_ln1649_162_fu_766_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_4_preg <= select_ln1649_163_fu_859_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_5_preg <= select_ln1649_164_fu_952_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_6_preg <= select_ln1649_165_fu_1045_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_7_preg <= select_ln1649_166_fu_1138_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_8_preg <= select_ln1649_167_fu_1231_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Range1_all_ones_160_reg_1395 <= Range1_all_ones_160_fu_166_p2;
        Range1_all_ones_161_reg_1411 <= Range1_all_ones_161_fu_198_p2;
        Range1_all_ones_162_reg_1427 <= Range1_all_ones_162_fu_230_p2;
        Range1_all_ones_163_reg_1443 <= Range1_all_ones_163_fu_262_p2;
        Range1_all_ones_164_reg_1459 <= Range1_all_ones_164_fu_294_p2;
        Range1_all_ones_165_reg_1475 <= Range1_all_ones_165_fu_326_p2;
        Range1_all_ones_166_reg_1491 <= Range1_all_ones_166_fu_358_p2;
        Range1_all_ones_167_reg_1507 <= Range1_all_ones_167_fu_390_p2;
        Range1_all_ones_reg_1379 <= Range1_all_ones_fu_134_p2;
        Range1_all_zeros_160_reg_1400 <= Range1_all_zeros_160_fu_172_p2;
        Range1_all_zeros_161_reg_1416 <= Range1_all_zeros_161_fu_204_p2;
        Range1_all_zeros_162_reg_1432 <= Range1_all_zeros_162_fu_236_p2;
        Range1_all_zeros_163_reg_1448 <= Range1_all_zeros_163_fu_268_p2;
        Range1_all_zeros_164_reg_1464 <= Range1_all_zeros_164_fu_300_p2;
        Range1_all_zeros_165_reg_1480 <= Range1_all_zeros_165_fu_332_p2;
        Range1_all_zeros_166_reg_1496 <= Range1_all_zeros_166_fu_364_p2;
        Range1_all_zeros_167_reg_1512 <= Range1_all_zeros_167_fu_396_p2;
        Range1_all_zeros_reg_1384 <= Range1_all_zeros_fu_140_p2;
        p_read110_reg_1356 <= p_read1;
        p_read211_reg_1347 <= p_read2;
        p_read312_reg_1338 <= p_read3;
        p_read413_reg_1329 <= p_read4;
        p_read514_reg_1320 <= p_read5;
        p_read615_reg_1311 <= p_read6;
        p_read716_reg_1302 <= p_read7;
        p_read817_reg_1293 <= p_read8;
        p_read_164_reg_1365 <= p_read;
        r_160_reg_1390 <= r_160_fu_150_p2;
        r_161_reg_1406 <= r_161_fu_182_p2;
        r_162_reg_1422 <= r_162_fu_214_p2;
        r_163_reg_1438 <= r_163_fu_246_p2;
        r_164_reg_1454 <= r_164_fu_278_p2;
        r_165_reg_1470 <= r_165_fu_310_p2;
        r_166_reg_1486 <= r_166_fu_342_p2;
        r_167_reg_1502 <= r_167_fu_374_p2;
        r_reg_1374 <= r_fu_118_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_0 = select_ln1649_fu_487_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_1 = select_ln1649_160_fu_580_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_2 = select_ln1649_161_fu_673_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_3 = select_ln1649_162_fu_766_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_4 = select_ln1649_163_fu_859_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_5 = select_ln1649_164_fu_952_p3;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_6 = select_ln1649_165_fu_1045_p3;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_7 = select_ln1649_166_fu_1138_p3;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_8 = select_ln1649_167_fu_1231_p3;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_160_fu_166_p2 = ((tmp_180_fu_156_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_161_fu_198_p2 = ((tmp_181_fu_188_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_162_fu_230_p2 = ((tmp_182_fu_220_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_163_fu_262_p2 = ((tmp_183_fu_252_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_164_fu_294_p2 = ((tmp_184_fu_284_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_165_fu_326_p2 = ((tmp_185_fu_316_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_166_fu_358_p2 = ((tmp_186_fu_348_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_167_fu_390_p2 = ((tmp_187_fu_380_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_134_p2 = ((tmp_s_fu_124_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_zeros_160_fu_172_p2 = ((tmp_180_fu_156_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_161_fu_204_p2 = ((tmp_181_fu_188_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_162_fu_236_p2 = ((tmp_182_fu_220_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_163_fu_268_p2 = ((tmp_183_fu_252_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_164_fu_300_p2 = ((tmp_184_fu_284_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_165_fu_332_p2 = ((tmp_185_fu_316_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_166_fu_364_p2 = ((tmp_186_fu_348_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_167_fu_396_p2 = ((tmp_187_fu_380_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_140_p2 = ((tmp_s_fu_124_p4 == 6'd0) ? 1'b1 : 1'b0);

assign and_ln374_160_fu_535_p2 = (p_Result_852_fu_516_p3 & or_ln374_160_fu_530_p2);

assign and_ln374_161_fu_628_p2 = (p_Result_854_fu_609_p3 & or_ln374_161_fu_623_p2);

assign and_ln374_162_fu_721_p2 = (p_Result_856_fu_702_p3 & or_ln374_162_fu_716_p2);

assign and_ln374_163_fu_814_p2 = (p_Result_858_fu_795_p3 & or_ln374_163_fu_809_p2);

assign and_ln374_164_fu_907_p2 = (p_Result_860_fu_888_p3 & or_ln374_164_fu_902_p2);

assign and_ln374_165_fu_1000_p2 = (p_Result_862_fu_981_p3 & or_ln374_165_fu_995_p2);

assign and_ln374_166_fu_1093_p2 = (p_Result_864_fu_1074_p3 & or_ln374_166_fu_1088_p2);

assign and_ln374_167_fu_1186_p2 = (p_Result_866_fu_1167_p3 & or_ln374_167_fu_1181_p2);

assign and_ln374_fu_442_p2 = (p_Result_850_fu_423_p3 & or_ln374_fu_437_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign deleted_zeros_160_fu_565_p3 = ((p_Result_853_fu_523_p3[0:0] == 1'b1) ? select_ln888_160_fu_559_p3 : Range1_all_zeros_160_reg_1400);

assign deleted_zeros_161_fu_658_p3 = ((p_Result_855_fu_616_p3[0:0] == 1'b1) ? select_ln888_161_fu_652_p3 : Range1_all_zeros_161_reg_1416);

assign deleted_zeros_162_fu_751_p3 = ((p_Result_857_fu_709_p3[0:0] == 1'b1) ? select_ln888_162_fu_745_p3 : Range1_all_zeros_162_reg_1432);

assign deleted_zeros_163_fu_844_p3 = ((p_Result_859_fu_802_p3[0:0] == 1'b1) ? select_ln888_163_fu_838_p3 : Range1_all_zeros_163_reg_1448);

assign deleted_zeros_164_fu_937_p3 = ((p_Result_861_fu_895_p3[0:0] == 1'b1) ? select_ln888_164_fu_931_p3 : Range1_all_zeros_164_reg_1464);

assign deleted_zeros_165_fu_1030_p3 = ((p_Result_863_fu_988_p3[0:0] == 1'b1) ? select_ln888_165_fu_1024_p3 : Range1_all_zeros_165_reg_1480);

assign deleted_zeros_166_fu_1123_p3 = ((p_Result_865_fu_1081_p3[0:0] == 1'b1) ? select_ln888_166_fu_1117_p3 : Range1_all_zeros_166_reg_1496);

assign deleted_zeros_167_fu_1216_p3 = ((p_Result_867_fu_1174_p3[0:0] == 1'b1) ? select_ln888_167_fu_1210_p3 : Range1_all_zeros_167_reg_1512);

assign deleted_zeros_fu_472_p3 = ((p_Result_851_fu_430_p3[0:0] == 1'b1) ? select_ln888_fu_466_p3 : Range1_all_zeros_reg_1384);

assign icmp_ln1649_160_fu_495_p2 = (($signed(p_read110_reg_1356) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_161_fu_588_p2 = (($signed(p_read211_reg_1347) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_162_fu_681_p2 = (($signed(p_read312_reg_1338) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_163_fu_774_p2 = (($signed(p_read413_reg_1329) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_164_fu_867_p2 = (($signed(p_read514_reg_1320) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_165_fu_960_p2 = (($signed(p_read615_reg_1311) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_166_fu_1053_p2 = (($signed(p_read716_reg_1302) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_167_fu_1146_p2 = (($signed(p_read817_reg_1293) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_402_p2 = (($signed(p_read_164_reg_1365) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign or_ln374_160_fu_530_p2 = (r_160_reg_1390 | p_Result_828_fu_509_p3);

assign or_ln374_161_fu_623_p2 = (r_161_reg_1406 | p_Result_831_fu_602_p3);

assign or_ln374_162_fu_716_p2 = (r_162_reg_1422 | p_Result_834_fu_695_p3);

assign or_ln374_163_fu_809_p2 = (r_163_reg_1438 | p_Result_837_fu_788_p3);

assign or_ln374_164_fu_902_p2 = (r_164_reg_1454 | p_Result_840_fu_881_p3);

assign or_ln374_165_fu_995_p2 = (r_165_reg_1470 | p_Result_843_fu_974_p3);

assign or_ln374_166_fu_1088_p2 = (r_166_reg_1486 | p_Result_846_fu_1067_p3);

assign or_ln374_167_fu_1181_p2 = (r_167_reg_1502 | p_Result_849_fu_1160_p3);

assign or_ln374_fu_437_p2 = (r_reg_1374 | p_Result_s_fu_416_p3);

assign p_Result_828_fu_509_p3 = p_read110_reg_1356[32'd7];

assign p_Result_831_fu_602_p3 = p_read211_reg_1347[32'd7];

assign p_Result_834_fu_695_p3 = p_read312_reg_1338[32'd7];

assign p_Result_837_fu_788_p3 = p_read413_reg_1329[32'd7];

assign p_Result_840_fu_881_p3 = p_read514_reg_1320[32'd7];

assign p_Result_843_fu_974_p3 = p_read615_reg_1311[32'd7];

assign p_Result_846_fu_1067_p3 = p_read716_reg_1302[32'd7];

assign p_Result_849_fu_1160_p3 = p_read817_reg_1293[32'd7];

assign p_Result_850_fu_423_p3 = p_read_164_reg_1365[32'd6];

assign p_Result_851_fu_430_p3 = p_read_164_reg_1365[32'd15];

assign p_Result_852_fu_516_p3 = p_read110_reg_1356[32'd6];

assign p_Result_853_fu_523_p3 = p_read110_reg_1356[32'd15];

assign p_Result_854_fu_609_p3 = p_read211_reg_1347[32'd6];

assign p_Result_855_fu_616_p3 = p_read211_reg_1347[32'd15];

assign p_Result_856_fu_702_p3 = p_read312_reg_1338[32'd6];

assign p_Result_857_fu_709_p3 = p_read312_reg_1338[32'd15];

assign p_Result_858_fu_795_p3 = p_read413_reg_1329[32'd6];

assign p_Result_859_fu_802_p3 = p_read413_reg_1329[32'd15];

assign p_Result_860_fu_888_p3 = p_read514_reg_1320[32'd6];

assign p_Result_861_fu_895_p3 = p_read514_reg_1320[32'd15];

assign p_Result_862_fu_981_p3 = p_read615_reg_1311[32'd6];

assign p_Result_863_fu_988_p3 = p_read615_reg_1311[32'd15];

assign p_Result_864_fu_1074_p3 = p_read716_reg_1302[32'd6];

assign p_Result_865_fu_1081_p3 = p_read716_reg_1302[32'd15];

assign p_Result_866_fu_1167_p3 = p_read817_reg_1293[32'd6];

assign p_Result_867_fu_1174_p3 = p_read817_reg_1293[32'd15];

assign p_Result_s_fu_416_p3 = p_read_164_reg_1365[32'd7];

assign p_Val2_329_fu_452_p2 = (p_Val2_s_fu_407_p4 + zext_ln377_fu_448_p1);

assign p_Val2_330_fu_500_p4 = {{p_read110_reg_1356[15:7]}};

assign p_Val2_331_fu_545_p2 = (p_Val2_330_fu_500_p4 + zext_ln377_160_fu_541_p1);

assign p_Val2_332_fu_593_p4 = {{p_read211_reg_1347[15:7]}};

assign p_Val2_333_fu_638_p2 = (p_Val2_332_fu_593_p4 + zext_ln377_161_fu_634_p1);

assign p_Val2_334_fu_686_p4 = {{p_read312_reg_1338[15:7]}};

assign p_Val2_335_fu_731_p2 = (p_Val2_334_fu_686_p4 + zext_ln377_162_fu_727_p1);

assign p_Val2_336_fu_779_p4 = {{p_read413_reg_1329[15:7]}};

assign p_Val2_337_fu_824_p2 = (p_Val2_336_fu_779_p4 + zext_ln377_163_fu_820_p1);

assign p_Val2_338_fu_872_p4 = {{p_read514_reg_1320[15:7]}};

assign p_Val2_339_fu_917_p2 = (p_Val2_338_fu_872_p4 + zext_ln377_164_fu_913_p1);

assign p_Val2_340_fu_965_p4 = {{p_read615_reg_1311[15:7]}};

assign p_Val2_341_fu_1010_p2 = (p_Val2_340_fu_965_p4 + zext_ln377_165_fu_1006_p1);

assign p_Val2_342_fu_1058_p4 = {{p_read716_reg_1302[15:7]}};

assign p_Val2_343_fu_1103_p2 = (p_Val2_342_fu_1058_p4 + zext_ln377_166_fu_1099_p1);

assign p_Val2_344_fu_1151_p4 = {{p_read817_reg_1293[15:7]}};

assign p_Val2_345_fu_1196_p2 = (p_Val2_344_fu_1151_p4 + zext_ln377_167_fu_1192_p1);

assign p_Val2_s_fu_407_p4 = {{p_read_164_reg_1365[15:7]}};

assign r_160_fu_150_p2 = ((trunc_ln828_160_fu_146_p1 != 6'd0) ? 1'b1 : 1'b0);

assign r_161_fu_182_p2 = ((trunc_ln828_161_fu_178_p1 != 6'd0) ? 1'b1 : 1'b0);

assign r_162_fu_214_p2 = ((trunc_ln828_162_fu_210_p1 != 6'd0) ? 1'b1 : 1'b0);

assign r_163_fu_246_p2 = ((trunc_ln828_163_fu_242_p1 != 6'd0) ? 1'b1 : 1'b0);

assign r_164_fu_278_p2 = ((trunc_ln828_164_fu_274_p1 != 6'd0) ? 1'b1 : 1'b0);

assign r_165_fu_310_p2 = ((trunc_ln828_165_fu_306_p1 != 6'd0) ? 1'b1 : 1'b0);

assign r_166_fu_342_p2 = ((trunc_ln828_166_fu_338_p1 != 6'd0) ? 1'b1 : 1'b0);

assign r_167_fu_374_p2 = ((trunc_ln828_167_fu_370_p1 != 6'd0) ? 1'b1 : 1'b0);

assign r_fu_118_p2 = ((trunc_ln828_fu_114_p1 != 6'd0) ? 1'b1 : 1'b0);

assign select_ln1649_160_fu_580_p3 = ((icmp_ln1649_160_fu_495_p2[0:0] == 1'b1) ? select_ln302_160_fu_572_p3 : 9'd0);

assign select_ln1649_161_fu_673_p3 = ((icmp_ln1649_161_fu_588_p2[0:0] == 1'b1) ? select_ln302_161_fu_665_p3 : 9'd0);

assign select_ln1649_162_fu_766_p3 = ((icmp_ln1649_162_fu_681_p2[0:0] == 1'b1) ? select_ln302_162_fu_758_p3 : 9'd0);

assign select_ln1649_163_fu_859_p3 = ((icmp_ln1649_163_fu_774_p2[0:0] == 1'b1) ? select_ln302_163_fu_851_p3 : 9'd0);

assign select_ln1649_164_fu_952_p3 = ((icmp_ln1649_164_fu_867_p2[0:0] == 1'b1) ? select_ln302_164_fu_944_p3 : 9'd0);

assign select_ln1649_165_fu_1045_p3 = ((icmp_ln1649_165_fu_960_p2[0:0] == 1'b1) ? select_ln302_165_fu_1037_p3 : 9'd0);

assign select_ln1649_166_fu_1138_p3 = ((icmp_ln1649_166_fu_1053_p2[0:0] == 1'b1) ? select_ln302_166_fu_1130_p3 : 9'd0);

assign select_ln1649_167_fu_1231_p3 = ((icmp_ln1649_167_fu_1146_p2[0:0] == 1'b1) ? select_ln302_167_fu_1223_p3 : 9'd0);

assign select_ln1649_fu_487_p3 = ((icmp_ln1649_fu_402_p2[0:0] == 1'b1) ? select_ln302_fu_479_p3 : 9'd0);

assign select_ln302_160_fu_572_p3 = ((deleted_zeros_160_fu_565_p3[0:0] == 1'b1) ? p_Val2_331_fu_545_p2 : 9'd511);

assign select_ln302_161_fu_665_p3 = ((deleted_zeros_161_fu_658_p3[0:0] == 1'b1) ? p_Val2_333_fu_638_p2 : 9'd511);

assign select_ln302_162_fu_758_p3 = ((deleted_zeros_162_fu_751_p3[0:0] == 1'b1) ? p_Val2_335_fu_731_p2 : 9'd511);

assign select_ln302_163_fu_851_p3 = ((deleted_zeros_163_fu_844_p3[0:0] == 1'b1) ? p_Val2_337_fu_824_p2 : 9'd511);

assign select_ln302_164_fu_944_p3 = ((deleted_zeros_164_fu_937_p3[0:0] == 1'b1) ? p_Val2_339_fu_917_p2 : 9'd511);

assign select_ln302_165_fu_1037_p3 = ((deleted_zeros_165_fu_1030_p3[0:0] == 1'b1) ? p_Val2_341_fu_1010_p2 : 9'd511);

assign select_ln302_166_fu_1130_p3 = ((deleted_zeros_166_fu_1123_p3[0:0] == 1'b1) ? p_Val2_343_fu_1103_p2 : 9'd511);

assign select_ln302_167_fu_1223_p3 = ((deleted_zeros_167_fu_1216_p3[0:0] == 1'b1) ? p_Val2_345_fu_1196_p2 : 9'd511);

assign select_ln302_fu_479_p3 = ((deleted_zeros_fu_472_p3[0:0] == 1'b1) ? p_Val2_329_fu_452_p2 : 9'd511);

assign select_ln888_160_fu_559_p3 = ((tmp_814_fu_551_p3[0:0] == 1'b1) ? Range1_all_zeros_160_reg_1400 : Range1_all_ones_160_reg_1395);

assign select_ln888_161_fu_652_p3 = ((tmp_818_fu_644_p3[0:0] == 1'b1) ? Range1_all_zeros_161_reg_1416 : Range1_all_ones_161_reg_1411);

assign select_ln888_162_fu_745_p3 = ((tmp_822_fu_737_p3[0:0] == 1'b1) ? Range1_all_zeros_162_reg_1432 : Range1_all_ones_162_reg_1427);

assign select_ln888_163_fu_838_p3 = ((tmp_826_fu_830_p3[0:0] == 1'b1) ? Range1_all_zeros_163_reg_1448 : Range1_all_ones_163_reg_1443);

assign select_ln888_164_fu_931_p3 = ((tmp_830_fu_923_p3[0:0] == 1'b1) ? Range1_all_zeros_164_reg_1464 : Range1_all_ones_164_reg_1459);

assign select_ln888_165_fu_1024_p3 = ((tmp_834_fu_1016_p3[0:0] == 1'b1) ? Range1_all_zeros_165_reg_1480 : Range1_all_ones_165_reg_1475);

assign select_ln888_166_fu_1117_p3 = ((tmp_838_fu_1109_p3[0:0] == 1'b1) ? Range1_all_zeros_166_reg_1496 : Range1_all_ones_166_reg_1491);

assign select_ln888_167_fu_1210_p3 = ((tmp_842_fu_1202_p3[0:0] == 1'b1) ? Range1_all_zeros_167_reg_1512 : Range1_all_ones_167_reg_1507);

assign select_ln888_fu_466_p3 = ((tmp_fu_458_p3[0:0] == 1'b1) ? Range1_all_zeros_reg_1384 : Range1_all_ones_reg_1379);

assign tmp_180_fu_156_p4 = {{p_read1[21:16]}};

assign tmp_181_fu_188_p4 = {{p_read2[21:16]}};

assign tmp_182_fu_220_p4 = {{p_read3[21:16]}};

assign tmp_183_fu_252_p4 = {{p_read4[21:16]}};

assign tmp_184_fu_284_p4 = {{p_read5[21:16]}};

assign tmp_185_fu_316_p4 = {{p_read6[21:16]}};

assign tmp_186_fu_348_p4 = {{p_read7[21:16]}};

assign tmp_187_fu_380_p4 = {{p_read8[21:16]}};

assign tmp_814_fu_551_p3 = p_Val2_331_fu_545_p2[32'd8];

assign tmp_818_fu_644_p3 = p_Val2_333_fu_638_p2[32'd8];

assign tmp_822_fu_737_p3 = p_Val2_335_fu_731_p2[32'd8];

assign tmp_826_fu_830_p3 = p_Val2_337_fu_824_p2[32'd8];

assign tmp_830_fu_923_p3 = p_Val2_339_fu_917_p2[32'd8];

assign tmp_834_fu_1016_p3 = p_Val2_341_fu_1010_p2[32'd8];

assign tmp_838_fu_1109_p3 = p_Val2_343_fu_1103_p2[32'd8];

assign tmp_842_fu_1202_p3 = p_Val2_345_fu_1196_p2[32'd8];

assign tmp_fu_458_p3 = p_Val2_329_fu_452_p2[32'd8];

assign tmp_s_fu_124_p4 = {{p_read[21:16]}};

assign trunc_ln828_160_fu_146_p1 = p_read1[5:0];

assign trunc_ln828_161_fu_178_p1 = p_read2[5:0];

assign trunc_ln828_162_fu_210_p1 = p_read3[5:0];

assign trunc_ln828_163_fu_242_p1 = p_read4[5:0];

assign trunc_ln828_164_fu_274_p1 = p_read5[5:0];

assign trunc_ln828_165_fu_306_p1 = p_read6[5:0];

assign trunc_ln828_166_fu_338_p1 = p_read7[5:0];

assign trunc_ln828_167_fu_370_p1 = p_read8[5:0];

assign trunc_ln828_fu_114_p1 = p_read[5:0];

assign zext_ln377_160_fu_541_p1 = and_ln374_160_fu_535_p2;

assign zext_ln377_161_fu_634_p1 = and_ln374_161_fu_628_p2;

assign zext_ln377_162_fu_727_p1 = and_ln374_162_fu_721_p2;

assign zext_ln377_163_fu_820_p1 = and_ln374_163_fu_814_p2;

assign zext_ln377_164_fu_913_p1 = and_ln374_164_fu_907_p2;

assign zext_ln377_165_fu_1006_p1 = and_ln374_165_fu_1000_p2;

assign zext_ln377_166_fu_1099_p1 = and_ln374_166_fu_1093_p2;

assign zext_ln377_167_fu_1192_p1 = and_ln374_167_fu_1186_p2;

assign zext_ln377_fu_448_p1 = and_ln374_fu_442_p2;

endmodule //JetTaggerNN_relu_ap_fixed_30_14_5_3_0_ap_ufixed_9_0_4_0_0_relu_config21_s
