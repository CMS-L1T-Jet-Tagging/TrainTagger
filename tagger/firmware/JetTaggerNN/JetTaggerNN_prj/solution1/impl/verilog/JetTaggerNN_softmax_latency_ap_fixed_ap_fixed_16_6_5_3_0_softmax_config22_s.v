// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module JetTaggerNN_softmax_latency_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config22_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        layer22_out_0,
        layer22_out_0_ap_vld,
        layer22_out_1,
        layer22_out_1_ap_vld,
        layer22_out_2,
        layer22_out_2_ap_vld,
        layer22_out_3,
        layer22_out_3_ap_vld,
        layer22_out_4,
        layer22_out_4_ap_vld,
        layer22_out_5,
        layer22_out_5_ap_vld,
        layer22_out_6,
        layer22_out_6_ap_vld,
        layer22_out_7,
        layer22_out_7_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [20:0] p_read;
input  [20:0] p_read1;
input  [20:0] p_read2;
input  [20:0] p_read3;
input  [20:0] p_read4;
input  [20:0] p_read5;
input  [20:0] p_read6;
input  [20:0] p_read7;
output  [15:0] layer22_out_0;
output   layer22_out_0_ap_vld;
output  [15:0] layer22_out_1;
output   layer22_out_1_ap_vld;
output  [15:0] layer22_out_2;
output   layer22_out_2_ap_vld;
output  [15:0] layer22_out_3;
output   layer22_out_3_ap_vld;
output  [15:0] layer22_out_4;
output   layer22_out_4_ap_vld;
output  [15:0] layer22_out_5;
output   layer22_out_5_ap_vld;
output  [15:0] layer22_out_6;
output   layer22_out_6_ap_vld;
output  [15:0] layer22_out_7;
output   layer22_out_7_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] layer22_out_0;
reg layer22_out_0_ap_vld;
reg[15:0] layer22_out_1;
reg layer22_out_1_ap_vld;
reg[15:0] layer22_out_2;
reg layer22_out_2_ap_vld;
reg[15:0] layer22_out_3;
reg layer22_out_3_ap_vld;
reg[15:0] layer22_out_4;
reg layer22_out_4_ap_vld;
reg[15:0] layer22_out_5;
reg layer22_out_5_ap_vld;
reg[15:0] layer22_out_6;
reg layer22_out_6_ap_vld;
reg[15:0] layer22_out_7;
reg layer22_out_7_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_subdone;
wire   [9:0] exp_table_address0;
reg    exp_table_ce0;
wire   [16:0] exp_table_q0;
wire   [9:0] exp_table_address1;
reg    exp_table_ce1;
wire   [16:0] exp_table_q1;
wire   [9:0] exp_table_address2;
reg    exp_table_ce2;
wire   [16:0] exp_table_q2;
wire   [9:0] exp_table_address3;
reg    exp_table_ce3;
wire   [16:0] exp_table_q3;
wire   [9:0] exp_table_address4;
reg    exp_table_ce4;
wire   [16:0] exp_table_q4;
wire   [9:0] exp_table_address5;
reg    exp_table_ce5;
wire   [16:0] exp_table_q5;
wire   [9:0] exp_table_address6;
reg    exp_table_ce6;
wire   [16:0] exp_table_q6;
wire   [9:0] exp_table_address7;
reg    exp_table_ce7;
wire   [16:0] exp_table_q7;
wire   [9:0] invert_table_address0;
reg    invert_table_ce0;
wire   [17:0] invert_table_q0;
reg   [7:0] p_Result_s_reg_1045;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] p_Result_1_reg_1050;
reg   [7:0] p_Result_2_reg_1055;
reg   [7:0] p_Result_3_reg_1060;
reg   [7:0] p_Result_4_reg_1065;
reg   [7:0] p_Result_5_reg_1070;
reg   [7:0] p_Result_6_reg_1075;
reg   [7:0] p_Result_7_reg_1080;
reg   [16:0] exp_res_V_reg_1125;
reg   [16:0] exp_res_V_reg_1125_pp0_iter3_reg;
reg   [16:0] exp_res_V_reg_1125_pp0_iter4_reg;
reg   [16:0] exp_res_V_reg_1125_pp0_iter5_reg;
reg   [16:0] exp_res_V_reg_1125_pp0_iter6_reg;
reg   [16:0] exp_res_V_8_reg_1131;
reg   [16:0] exp_res_V_8_reg_1131_pp0_iter3_reg;
reg   [16:0] exp_res_V_8_reg_1131_pp0_iter4_reg;
reg   [16:0] exp_res_V_8_reg_1131_pp0_iter5_reg;
reg   [16:0] exp_res_V_8_reg_1131_pp0_iter6_reg;
reg   [16:0] exp_res_V_9_reg_1137;
reg   [16:0] exp_res_V_9_reg_1137_pp0_iter3_reg;
reg   [16:0] exp_res_V_9_reg_1137_pp0_iter4_reg;
reg   [16:0] exp_res_V_9_reg_1137_pp0_iter5_reg;
reg   [16:0] exp_res_V_9_reg_1137_pp0_iter6_reg;
reg   [16:0] exp_res_V_10_reg_1143;
reg   [16:0] exp_res_V_10_reg_1143_pp0_iter3_reg;
reg   [16:0] exp_res_V_10_reg_1143_pp0_iter4_reg;
reg   [16:0] exp_res_V_10_reg_1143_pp0_iter5_reg;
reg   [16:0] exp_res_V_10_reg_1143_pp0_iter6_reg;
reg   [16:0] exp_res_V_11_reg_1149;
reg   [16:0] exp_res_V_11_reg_1149_pp0_iter3_reg;
reg   [16:0] exp_res_V_11_reg_1149_pp0_iter4_reg;
reg   [16:0] exp_res_V_11_reg_1149_pp0_iter5_reg;
reg   [16:0] exp_res_V_11_reg_1149_pp0_iter6_reg;
reg   [16:0] exp_res_V_12_reg_1155;
reg   [16:0] exp_res_V_12_reg_1155_pp0_iter3_reg;
reg   [16:0] exp_res_V_12_reg_1155_pp0_iter4_reg;
reg   [16:0] exp_res_V_12_reg_1155_pp0_iter5_reg;
reg   [16:0] exp_res_V_12_reg_1155_pp0_iter6_reg;
reg   [16:0] exp_res_V_13_reg_1161;
reg   [16:0] exp_res_V_13_reg_1161_pp0_iter3_reg;
reg   [16:0] exp_res_V_13_reg_1161_pp0_iter4_reg;
reg   [16:0] exp_res_V_13_reg_1161_pp0_iter5_reg;
reg   [16:0] exp_res_V_13_reg_1161_pp0_iter6_reg;
reg   [16:0] exp_res_V_14_reg_1167;
reg   [16:0] exp_res_V_14_reg_1167_pp0_iter3_reg;
reg   [16:0] exp_res_V_14_reg_1167_pp0_iter4_reg;
reg   [16:0] exp_res_V_14_reg_1167_pp0_iter5_reg;
reg   [16:0] exp_res_V_14_reg_1167_pp0_iter6_reg;
reg   [0:0] p_Result_21_reg_1173;
wire   [17:0] p_Val2_3_fu_552_p2;
reg   [17:0] p_Val2_3_reg_1180;
reg   [0:0] p_Result_22_reg_1186;
reg   [0:0] p_Result_25_reg_1193;
wire   [17:0] p_Val2_7_fu_676_p2;
reg   [17:0] p_Val2_7_reg_1200;
reg   [0:0] p_Result_26_reg_1206;
wire   [9:0] p_Result_18_fu_878_p3;
reg   [9:0] p_Result_18_reg_1213;
reg   [17:0] inv_exp_sum_V_reg_1223;
wire  signed [25:0] mul_ln1270_fu_997_p2;
reg  signed [25:0] mul_ln1270_reg_1228;
wire  signed [25:0] mul_ln1270_1_fu_1003_p2;
reg  signed [25:0] mul_ln1270_1_reg_1233;
wire  signed [25:0] mul_ln1270_2_fu_1009_p2;
reg  signed [25:0] mul_ln1270_2_reg_1238;
wire  signed [25:0] mul_ln1270_3_fu_1015_p2;
reg  signed [25:0] mul_ln1270_3_reg_1243;
wire  signed [25:0] mul_ln1270_4_fu_1021_p2;
reg  signed [25:0] mul_ln1270_4_reg_1248;
wire  signed [25:0] mul_ln1270_5_fu_1027_p2;
reg  signed [25:0] mul_ln1270_5_reg_1253;
wire  signed [25:0] mul_ln1270_6_fu_1033_p2;
reg  signed [25:0] mul_ln1270_6_reg_1258;
wire  signed [25:0] mul_ln1270_7_fu_1039_p2;
reg  signed [25:0] mul_ln1270_7_reg_1263;
wire   [63:0] zext_ln198_fu_381_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln198_1_fu_389_p1;
wire   [63:0] zext_ln198_2_fu_397_p1;
wire   [63:0] zext_ln198_3_fu_405_p1;
wire   [63:0] zext_ln198_4_fu_413_p1;
wire   [63:0] zext_ln198_5_fu_421_p1;
wire   [63:0] zext_ln198_6_fu_429_p1;
wire   [63:0] zext_ln198_7_fu_437_p1;
wire   [63:0] zext_ln208_fu_886_p1;
reg   [15:0] layer22_out_0_preg;
reg    ap_block_pp0_stage0_01001;
reg   [15:0] layer22_out_1_preg;
reg   [15:0] layer22_out_2_preg;
reg   [15:0] layer22_out_3_preg;
reg   [15:0] layer22_out_4_preg;
reg   [15:0] layer22_out_5_preg;
reg   [15:0] layer22_out_6_preg;
reg   [15:0] layer22_out_7_preg;
wire  signed [9:0] sext_ln198_fu_378_p1;
wire  signed [9:0] sext_ln198_1_fu_386_p1;
wire  signed [9:0] sext_ln198_2_fu_394_p1;
wire  signed [9:0] sext_ln198_3_fu_402_p1;
wire  signed [9:0] sext_ln198_4_fu_410_p1;
wire  signed [9:0] sext_ln198_5_fu_418_p1;
wire  signed [9:0] sext_ln198_6_fu_426_p1;
wire  signed [9:0] sext_ln198_7_fu_434_p1;
wire   [17:0] zext_ln43_1_fu_445_p1;
wire   [17:0] zext_ln43_fu_442_p1;
wire   [17:0] p_Val2_s_fu_448_p2;
wire   [0:0] tmp_2_fu_462_p3;
wire   [0:0] p_Result_19_fu_454_p3;
wire   [17:0] select_ln346_1_fu_470_p3;
wire   [17:0] zext_ln43_3_fu_489_p1;
wire   [17:0] zext_ln43_2_fu_486_p1;
wire   [17:0] p_Val2_1_fu_492_p2;
wire   [0:0] tmp_4_fu_506_p3;
wire   [0:0] p_Result_20_fu_498_p3;
wire   [17:0] select_ln346_2_fu_514_p3;
wire  signed [17:0] lhs_2_fu_478_p3;
wire  signed [17:0] rhs_2_fu_522_p3;
wire  signed [18:0] sext_ln813_3_fu_534_p1;
wire  signed [18:0] sext_ln813_2_fu_530_p1;
wire   [18:0] ret_V_fu_538_p2;
wire   [17:0] zext_ln43_5_fu_569_p1;
wire   [17:0] zext_ln43_4_fu_566_p1;
wire   [17:0] p_Val2_4_fu_572_p2;
wire   [0:0] tmp_8_fu_586_p3;
wire   [0:0] p_Result_23_fu_578_p3;
wire   [17:0] select_ln346_3_fu_594_p3;
wire   [17:0] zext_ln43_7_fu_613_p1;
wire   [17:0] zext_ln43_6_fu_610_p1;
wire   [17:0] p_Val2_5_fu_616_p2;
wire   [0:0] tmp_10_fu_630_p3;
wire   [0:0] p_Result_24_fu_622_p3;
wire   [17:0] select_ln346_4_fu_638_p3;
wire  signed [17:0] lhs_5_fu_602_p3;
wire  signed [17:0] rhs_5_fu_646_p3;
wire  signed [18:0] sext_ln813_5_fu_658_p1;
wire  signed [18:0] sext_ln813_4_fu_654_p1;
wire   [18:0] ret_V_1_fu_662_p2;
wire   [0:0] xor_ln895_1_fu_690_p2;
wire   [0:0] xor_ln896_fu_700_p2;
wire   [0:0] xor_ln302_1_fu_710_p2;
wire   [0:0] overflow_3_fu_695_p2;
wire   [0:0] xor_ln302_2_fu_714_p2;
wire   [0:0] underflow_fu_705_p2;
wire   [0:0] or_ln302_fu_720_p2;
wire   [17:0] select_ln302_fu_726_p3;
wire   [17:0] select_ln350_fu_733_p3;
wire   [0:0] xor_ln895_2_fu_748_p2;
wire   [0:0] xor_ln896_1_fu_758_p2;
wire   [0:0] xor_ln302_3_fu_768_p2;
wire   [0:0] overflow_6_fu_753_p2;
wire   [0:0] xor_ln302_4_fu_772_p2;
wire   [0:0] underflow_1_fu_763_p2;
wire   [0:0] or_ln302_1_fu_778_p2;
wire   [17:0] select_ln302_5_fu_784_p3;
wire   [17:0] select_ln350_1_fu_791_p3;
wire  signed [17:0] lhs_6_fu_740_p3;
wire  signed [17:0] rhs_6_fu_798_p3;
wire  signed [18:0] sext_ln813_fu_806_p1;
wire  signed [18:0] sext_ln813_1_fu_810_p1;
wire   [18:0] ret_V_2_fu_814_p2;
wire   [17:0] p_Val2_9_fu_828_p2;
wire   [0:0] p_Result_27_fu_820_p3;
wire   [0:0] p_Result_28_fu_834_p3;
wire   [0:0] xor_ln895_fu_842_p2;
wire   [0:0] overflow_fu_848_p2;
wire   [0:0] xor_ln302_fu_854_p2;
wire   [9:0] select_ln346_fu_860_p3;
wire   [9:0] tmp_fu_868_p4;
wire  signed [17:0] mul_ln1270_fu_997_p0;
wire  signed [25:0] sext_ln1273_fu_890_p1;
wire   [16:0] mul_ln1270_fu_997_p1;
wire  signed [17:0] mul_ln1270_1_fu_1003_p0;
wire   [16:0] mul_ln1270_1_fu_1003_p1;
wire  signed [17:0] mul_ln1270_2_fu_1009_p0;
wire   [16:0] mul_ln1270_2_fu_1009_p1;
wire  signed [17:0] mul_ln1270_3_fu_1015_p0;
wire   [16:0] mul_ln1270_3_fu_1015_p1;
wire  signed [17:0] mul_ln1270_4_fu_1021_p0;
wire   [16:0] mul_ln1270_4_fu_1021_p1;
wire  signed [17:0] mul_ln1270_5_fu_1027_p0;
wire   [16:0] mul_ln1270_5_fu_1027_p1;
wire  signed [17:0] mul_ln1270_6_fu_1033_p0;
wire   [16:0] mul_ln1270_6_fu_1033_p1;
wire  signed [17:0] mul_ln1270_7_fu_1039_p0;
wire   [16:0] mul_ln1270_7_fu_1039_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to7;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [25:0] mul_ln1270_1_fu_1003_p10;
wire   [25:0] mul_ln1270_2_fu_1009_p10;
wire   [25:0] mul_ln1270_3_fu_1015_p10;
wire   [25:0] mul_ln1270_4_fu_1021_p10;
wire   [25:0] mul_ln1270_5_fu_1027_p10;
wire   [25:0] mul_ln1270_6_fu_1033_p10;
wire   [25:0] mul_ln1270_7_fu_1039_p10;
wire   [25:0] mul_ln1270_fu_997_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 layer22_out_0_preg = 16'd0;
#0 layer22_out_1_preg = 16'd0;
#0 layer22_out_2_preg = 16'd0;
#0 layer22_out_3_preg = 16'd0;
#0 layer22_out_4_preg = 16'd0;
#0 layer22_out_5_preg = 16'd0;
#0 layer22_out_6_preg = 16'd0;
#0 layer22_out_7_preg = 16'd0;
end

JetTaggerNN_softmax_latency_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config22_s_exp_table_ROMbkb #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table_address0),
    .ce0(exp_table_ce0),
    .q0(exp_table_q0),
    .address1(exp_table_address1),
    .ce1(exp_table_ce1),
    .q1(exp_table_q1),
    .address2(exp_table_address2),
    .ce2(exp_table_ce2),
    .q2(exp_table_q2),
    .address3(exp_table_address3),
    .ce3(exp_table_ce3),
    .q3(exp_table_q3),
    .address4(exp_table_address4),
    .ce4(exp_table_ce4),
    .q4(exp_table_q4),
    .address5(exp_table_address5),
    .ce5(exp_table_ce5),
    .q5(exp_table_q5),
    .address6(exp_table_address6),
    .ce6(exp_table_ce6),
    .q6(exp_table_q6),
    .address7(exp_table_address7),
    .ce7(exp_table_ce7),
    .q7(exp_table_q7)
);

JetTaggerNN_softmax_latency_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config22_s_invert_table_cud #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table_address0),
    .ce0(invert_table_ce0),
    .q0(invert_table_q0)
);

JetTaggerNN_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_mul_18s_17ns_26_1_1_U3689(
    .din0(mul_ln1270_fu_997_p0),
    .din1(mul_ln1270_fu_997_p1),
    .dout(mul_ln1270_fu_997_p2)
);

JetTaggerNN_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_mul_18s_17ns_26_1_1_U3690(
    .din0(mul_ln1270_1_fu_1003_p0),
    .din1(mul_ln1270_1_fu_1003_p1),
    .dout(mul_ln1270_1_fu_1003_p2)
);

JetTaggerNN_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_mul_18s_17ns_26_1_1_U3691(
    .din0(mul_ln1270_2_fu_1009_p0),
    .din1(mul_ln1270_2_fu_1009_p1),
    .dout(mul_ln1270_2_fu_1009_p2)
);

JetTaggerNN_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_mul_18s_17ns_26_1_1_U3692(
    .din0(mul_ln1270_3_fu_1015_p0),
    .din1(mul_ln1270_3_fu_1015_p1),
    .dout(mul_ln1270_3_fu_1015_p2)
);

JetTaggerNN_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_mul_18s_17ns_26_1_1_U3693(
    .din0(mul_ln1270_4_fu_1021_p0),
    .din1(mul_ln1270_4_fu_1021_p1),
    .dout(mul_ln1270_4_fu_1021_p2)
);

JetTaggerNN_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_mul_18s_17ns_26_1_1_U3694(
    .din0(mul_ln1270_5_fu_1027_p0),
    .din1(mul_ln1270_5_fu_1027_p1),
    .dout(mul_ln1270_5_fu_1027_p2)
);

JetTaggerNN_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_mul_18s_17ns_26_1_1_U3695(
    .din0(mul_ln1270_6_fu_1033_p0),
    .din1(mul_ln1270_6_fu_1033_p1),
    .dout(mul_ln1270_6_fu_1033_p2)
);

JetTaggerNN_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_mul_18s_17ns_26_1_1_U3696(
    .din0(mul_ln1270_7_fu_1039_p0),
    .din1(mul_ln1270_7_fu_1039_p1),
    .dout(mul_ln1270_7_fu_1039_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer22_out_0_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            layer22_out_0_preg <= {{mul_ln1270_reg_1228[25:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer22_out_1_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            layer22_out_1_preg <= {{mul_ln1270_1_reg_1233[25:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer22_out_2_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            layer22_out_2_preg <= {{mul_ln1270_2_reg_1238[25:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer22_out_3_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            layer22_out_3_preg <= {{mul_ln1270_3_reg_1243[25:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer22_out_4_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            layer22_out_4_preg <= {{mul_ln1270_4_reg_1248[25:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer22_out_5_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            layer22_out_5_preg <= {{mul_ln1270_5_reg_1253[25:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer22_out_6_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            layer22_out_6_preg <= {{mul_ln1270_6_reg_1258[25:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer22_out_7_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            layer22_out_7_preg <= {{mul_ln1270_7_reg_1263[25:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_res_V_10_reg_1143 <= exp_table_q4;
        exp_res_V_11_reg_1149 <= exp_table_q3;
        exp_res_V_12_reg_1155 <= exp_table_q2;
        exp_res_V_13_reg_1161 <= exp_table_q1;
        exp_res_V_14_reg_1167 <= exp_table_q0;
        exp_res_V_8_reg_1131 <= exp_table_q6;
        exp_res_V_9_reg_1137 <= exp_table_q5;
        exp_res_V_reg_1125 <= exp_table_q7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exp_res_V_10_reg_1143_pp0_iter3_reg <= exp_res_V_10_reg_1143;
        exp_res_V_10_reg_1143_pp0_iter4_reg <= exp_res_V_10_reg_1143_pp0_iter3_reg;
        exp_res_V_10_reg_1143_pp0_iter5_reg <= exp_res_V_10_reg_1143_pp0_iter4_reg;
        exp_res_V_10_reg_1143_pp0_iter6_reg <= exp_res_V_10_reg_1143_pp0_iter5_reg;
        exp_res_V_11_reg_1149_pp0_iter3_reg <= exp_res_V_11_reg_1149;
        exp_res_V_11_reg_1149_pp0_iter4_reg <= exp_res_V_11_reg_1149_pp0_iter3_reg;
        exp_res_V_11_reg_1149_pp0_iter5_reg <= exp_res_V_11_reg_1149_pp0_iter4_reg;
        exp_res_V_11_reg_1149_pp0_iter6_reg <= exp_res_V_11_reg_1149_pp0_iter5_reg;
        exp_res_V_12_reg_1155_pp0_iter3_reg <= exp_res_V_12_reg_1155;
        exp_res_V_12_reg_1155_pp0_iter4_reg <= exp_res_V_12_reg_1155_pp0_iter3_reg;
        exp_res_V_12_reg_1155_pp0_iter5_reg <= exp_res_V_12_reg_1155_pp0_iter4_reg;
        exp_res_V_12_reg_1155_pp0_iter6_reg <= exp_res_V_12_reg_1155_pp0_iter5_reg;
        exp_res_V_13_reg_1161_pp0_iter3_reg <= exp_res_V_13_reg_1161;
        exp_res_V_13_reg_1161_pp0_iter4_reg <= exp_res_V_13_reg_1161_pp0_iter3_reg;
        exp_res_V_13_reg_1161_pp0_iter5_reg <= exp_res_V_13_reg_1161_pp0_iter4_reg;
        exp_res_V_13_reg_1161_pp0_iter6_reg <= exp_res_V_13_reg_1161_pp0_iter5_reg;
        exp_res_V_14_reg_1167_pp0_iter3_reg <= exp_res_V_14_reg_1167;
        exp_res_V_14_reg_1167_pp0_iter4_reg <= exp_res_V_14_reg_1167_pp0_iter3_reg;
        exp_res_V_14_reg_1167_pp0_iter5_reg <= exp_res_V_14_reg_1167_pp0_iter4_reg;
        exp_res_V_14_reg_1167_pp0_iter6_reg <= exp_res_V_14_reg_1167_pp0_iter5_reg;
        exp_res_V_8_reg_1131_pp0_iter3_reg <= exp_res_V_8_reg_1131;
        exp_res_V_8_reg_1131_pp0_iter4_reg <= exp_res_V_8_reg_1131_pp0_iter3_reg;
        exp_res_V_8_reg_1131_pp0_iter5_reg <= exp_res_V_8_reg_1131_pp0_iter4_reg;
        exp_res_V_8_reg_1131_pp0_iter6_reg <= exp_res_V_8_reg_1131_pp0_iter5_reg;
        exp_res_V_9_reg_1137_pp0_iter3_reg <= exp_res_V_9_reg_1137;
        exp_res_V_9_reg_1137_pp0_iter4_reg <= exp_res_V_9_reg_1137_pp0_iter3_reg;
        exp_res_V_9_reg_1137_pp0_iter5_reg <= exp_res_V_9_reg_1137_pp0_iter4_reg;
        exp_res_V_9_reg_1137_pp0_iter6_reg <= exp_res_V_9_reg_1137_pp0_iter5_reg;
        exp_res_V_reg_1125_pp0_iter3_reg <= exp_res_V_reg_1125;
        exp_res_V_reg_1125_pp0_iter4_reg <= exp_res_V_reg_1125_pp0_iter3_reg;
        exp_res_V_reg_1125_pp0_iter5_reg <= exp_res_V_reg_1125_pp0_iter4_reg;
        exp_res_V_reg_1125_pp0_iter6_reg <= exp_res_V_reg_1125_pp0_iter5_reg;
        inv_exp_sum_V_reg_1223 <= invert_table_q0;
        mul_ln1270_1_reg_1233 <= mul_ln1270_1_fu_1003_p2;
        mul_ln1270_2_reg_1238 <= mul_ln1270_2_fu_1009_p2;
        mul_ln1270_3_reg_1243 <= mul_ln1270_3_fu_1015_p2;
        mul_ln1270_4_reg_1248 <= mul_ln1270_4_fu_1021_p2;
        mul_ln1270_5_reg_1253 <= mul_ln1270_5_fu_1027_p2;
        mul_ln1270_6_reg_1258 <= mul_ln1270_6_fu_1033_p2;
        mul_ln1270_7_reg_1263 <= mul_ln1270_7_fu_1039_p2;
        mul_ln1270_reg_1228 <= mul_ln1270_fu_997_p2;
        p_Result_18_reg_1213 <= p_Result_18_fu_878_p3;
        p_Result_21_reg_1173 <= ret_V_fu_538_p2[32'd18];
        p_Result_22_reg_1186 <= p_Val2_3_fu_552_p2[32'd17];
        p_Result_25_reg_1193 <= ret_V_1_fu_662_p2[32'd18];
        p_Result_26_reg_1206 <= p_Val2_7_fu_676_p2[32'd17];
        p_Val2_3_reg_1180 <= p_Val2_3_fu_552_p2;
        p_Val2_7_reg_1200 <= p_Val2_7_fu_676_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_1_reg_1050 <= {{p_read1[20:13]}};
        p_Result_2_reg_1055 <= {{p_read2[20:13]}};
        p_Result_3_reg_1060 <= {{p_read3[20:13]}};
        p_Result_4_reg_1065 <= {{p_read4[20:13]}};
        p_Result_5_reg_1070 <= {{p_read5[20:13]}};
        p_Result_6_reg_1075 <= {{p_read6[20:13]}};
        p_Result_7_reg_1080 <= {{p_read7[20:13]}};
        p_Result_s_reg_1045 <= {{p_read[20:13]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce0 = 1'b1;
    end else begin
        exp_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce1 = 1'b1;
    end else begin
        exp_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce2 = 1'b1;
    end else begin
        exp_table_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce3 = 1'b1;
    end else begin
        exp_table_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce4 = 1'b1;
    end else begin
        exp_table_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce5 = 1'b1;
    end else begin
        exp_table_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce6 = 1'b1;
    end else begin
        exp_table_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_ce7 = 1'b1;
    end else begin
        exp_table_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        invert_table_ce0 = 1'b1;
    end else begin
        invert_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_0 = {{mul_ln1270_reg_1228[25:10]}};
    end else begin
        layer22_out_0 = layer22_out_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_0_ap_vld = 1'b1;
    end else begin
        layer22_out_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_1 = {{mul_ln1270_1_reg_1233[25:10]}};
    end else begin
        layer22_out_1 = layer22_out_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_1_ap_vld = 1'b1;
    end else begin
        layer22_out_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_2 = {{mul_ln1270_2_reg_1238[25:10]}};
    end else begin
        layer22_out_2 = layer22_out_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_2_ap_vld = 1'b1;
    end else begin
        layer22_out_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_3 = {{mul_ln1270_3_reg_1243[25:10]}};
    end else begin
        layer22_out_3 = layer22_out_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_3_ap_vld = 1'b1;
    end else begin
        layer22_out_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_4 = {{mul_ln1270_4_reg_1248[25:10]}};
    end else begin
        layer22_out_4 = layer22_out_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_4_ap_vld = 1'b1;
    end else begin
        layer22_out_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_5 = {{mul_ln1270_5_reg_1253[25:10]}};
    end else begin
        layer22_out_5 = layer22_out_5_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_5_ap_vld = 1'b1;
    end else begin
        layer22_out_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_6 = {{mul_ln1270_6_reg_1258[25:10]}};
    end else begin
        layer22_out_6 = layer22_out_6_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_6_ap_vld = 1'b1;
    end else begin
        layer22_out_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_7 = {{mul_ln1270_7_reg_1263[25:10]}};
    end else begin
        layer22_out_7 = layer22_out_7_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layer22_out_7_ap_vld = 1'b1;
    end else begin
        layer22_out_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign exp_table_address0 = zext_ln198_7_fu_437_p1;

assign exp_table_address1 = zext_ln198_6_fu_429_p1;

assign exp_table_address2 = zext_ln198_5_fu_421_p1;

assign exp_table_address3 = zext_ln198_4_fu_413_p1;

assign exp_table_address4 = zext_ln198_3_fu_405_p1;

assign exp_table_address5 = zext_ln198_2_fu_397_p1;

assign exp_table_address6 = zext_ln198_1_fu_389_p1;

assign exp_table_address7 = zext_ln198_fu_381_p1;

assign invert_table_address0 = zext_ln208_fu_886_p1;

assign lhs_2_fu_478_p3 = ((p_Result_19_fu_454_p3[0:0] == 1'b1) ? select_ln346_1_fu_470_p3 : p_Val2_s_fu_448_p2);

assign lhs_5_fu_602_p3 = ((p_Result_23_fu_578_p3[0:0] == 1'b1) ? select_ln346_3_fu_594_p3 : p_Val2_4_fu_572_p2);

assign lhs_6_fu_740_p3 = ((or_ln302_fu_720_p2[0:0] == 1'b1) ? select_ln302_fu_726_p3 : select_ln350_fu_733_p3);

assign mul_ln1270_1_fu_1003_p0 = sext_ln1273_fu_890_p1;

assign mul_ln1270_1_fu_1003_p1 = mul_ln1270_1_fu_1003_p10;

assign mul_ln1270_1_fu_1003_p10 = exp_res_V_8_reg_1131_pp0_iter6_reg;

assign mul_ln1270_2_fu_1009_p0 = sext_ln1273_fu_890_p1;

assign mul_ln1270_2_fu_1009_p1 = mul_ln1270_2_fu_1009_p10;

assign mul_ln1270_2_fu_1009_p10 = exp_res_V_9_reg_1137_pp0_iter6_reg;

assign mul_ln1270_3_fu_1015_p0 = sext_ln1273_fu_890_p1;

assign mul_ln1270_3_fu_1015_p1 = mul_ln1270_3_fu_1015_p10;

assign mul_ln1270_3_fu_1015_p10 = exp_res_V_10_reg_1143_pp0_iter6_reg;

assign mul_ln1270_4_fu_1021_p0 = sext_ln1273_fu_890_p1;

assign mul_ln1270_4_fu_1021_p1 = mul_ln1270_4_fu_1021_p10;

assign mul_ln1270_4_fu_1021_p10 = exp_res_V_11_reg_1149_pp0_iter6_reg;

assign mul_ln1270_5_fu_1027_p0 = sext_ln1273_fu_890_p1;

assign mul_ln1270_5_fu_1027_p1 = mul_ln1270_5_fu_1027_p10;

assign mul_ln1270_5_fu_1027_p10 = exp_res_V_12_reg_1155_pp0_iter6_reg;

assign mul_ln1270_6_fu_1033_p0 = sext_ln1273_fu_890_p1;

assign mul_ln1270_6_fu_1033_p1 = mul_ln1270_6_fu_1033_p10;

assign mul_ln1270_6_fu_1033_p10 = exp_res_V_13_reg_1161_pp0_iter6_reg;

assign mul_ln1270_7_fu_1039_p0 = sext_ln1273_fu_890_p1;

assign mul_ln1270_7_fu_1039_p1 = mul_ln1270_7_fu_1039_p10;

assign mul_ln1270_7_fu_1039_p10 = exp_res_V_14_reg_1167_pp0_iter6_reg;

assign mul_ln1270_fu_997_p0 = sext_ln1273_fu_890_p1;

assign mul_ln1270_fu_997_p1 = mul_ln1270_fu_997_p10;

assign mul_ln1270_fu_997_p10 = exp_res_V_reg_1125_pp0_iter6_reg;

assign or_ln302_1_fu_778_p2 = (xor_ln302_4_fu_772_p2 | overflow_6_fu_753_p2);

assign or_ln302_fu_720_p2 = (xor_ln302_2_fu_714_p2 | overflow_3_fu_695_p2);

assign overflow_3_fu_695_p2 = (xor_ln895_1_fu_690_p2 & p_Result_22_reg_1186);

assign overflow_6_fu_753_p2 = (xor_ln895_2_fu_748_p2 & p_Result_26_reg_1206);

assign overflow_fu_848_p2 = (xor_ln895_fu_842_p2 & p_Result_28_fu_834_p3);

assign p_Result_18_fu_878_p3 = ((xor_ln302_fu_854_p2[0:0] == 1'b1) ? select_ln346_fu_860_p3 : tmp_fu_868_p4);

assign p_Result_19_fu_454_p3 = p_Val2_s_fu_448_p2[32'd17];

assign p_Result_20_fu_498_p3 = p_Val2_1_fu_492_p2[32'd17];

assign p_Result_23_fu_578_p3 = p_Val2_4_fu_572_p2[32'd17];

assign p_Result_24_fu_622_p3 = p_Val2_5_fu_616_p2[32'd17];

assign p_Result_27_fu_820_p3 = ret_V_2_fu_814_p2[32'd18];

assign p_Result_28_fu_834_p3 = p_Val2_9_fu_828_p2[32'd17];

assign p_Val2_1_fu_492_p2 = (zext_ln43_3_fu_489_p1 + zext_ln43_2_fu_486_p1);

assign p_Val2_3_fu_552_p2 = ($signed(rhs_2_fu_522_p3) + $signed(lhs_2_fu_478_p3));

assign p_Val2_4_fu_572_p2 = (zext_ln43_5_fu_569_p1 + zext_ln43_4_fu_566_p1);

assign p_Val2_5_fu_616_p2 = (zext_ln43_7_fu_613_p1 + zext_ln43_6_fu_610_p1);

assign p_Val2_7_fu_676_p2 = ($signed(rhs_5_fu_646_p3) + $signed(lhs_5_fu_602_p3));

assign p_Val2_9_fu_828_p2 = ($signed(lhs_6_fu_740_p3) + $signed(rhs_6_fu_798_p3));

assign p_Val2_s_fu_448_p2 = (zext_ln43_1_fu_445_p1 + zext_ln43_fu_442_p1);

assign ret_V_1_fu_662_p2 = ($signed(sext_ln813_5_fu_658_p1) + $signed(sext_ln813_4_fu_654_p1));

assign ret_V_2_fu_814_p2 = ($signed(sext_ln813_fu_806_p1) + $signed(sext_ln813_1_fu_810_p1));

assign ret_V_fu_538_p2 = ($signed(sext_ln813_3_fu_534_p1) + $signed(sext_ln813_2_fu_530_p1));

assign rhs_2_fu_522_p3 = ((p_Result_20_fu_498_p3[0:0] == 1'b1) ? select_ln346_2_fu_514_p3 : p_Val2_1_fu_492_p2);

assign rhs_5_fu_646_p3 = ((p_Result_24_fu_622_p3[0:0] == 1'b1) ? select_ln346_4_fu_638_p3 : p_Val2_5_fu_616_p2);

assign rhs_6_fu_798_p3 = ((or_ln302_1_fu_778_p2[0:0] == 1'b1) ? select_ln302_5_fu_784_p3 : select_ln350_1_fu_791_p3);

assign select_ln302_5_fu_784_p3 = ((xor_ln302_3_fu_768_p2[0:0] == 1'b1) ? 18'd131071 : p_Val2_7_reg_1200);

assign select_ln302_fu_726_p3 = ((xor_ln302_1_fu_710_p2[0:0] == 1'b1) ? 18'd131071 : p_Val2_3_reg_1180);

assign select_ln346_1_fu_470_p3 = ((tmp_2_fu_462_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_2_fu_514_p3 = ((tmp_4_fu_506_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_3_fu_594_p3 = ((tmp_8_fu_586_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_4_fu_638_p3 = ((tmp_10_fu_630_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_fu_860_p3 = ((overflow_fu_848_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln350_1_fu_791_p3 = ((underflow_1_fu_763_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_7_reg_1200);

assign select_ln350_fu_733_p3 = ((underflow_fu_705_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_3_reg_1180);

assign sext_ln1273_fu_890_p1 = $signed(inv_exp_sum_V_reg_1223);

assign sext_ln198_1_fu_386_p1 = $signed(p_Result_1_reg_1050);

assign sext_ln198_2_fu_394_p1 = $signed(p_Result_2_reg_1055);

assign sext_ln198_3_fu_402_p1 = $signed(p_Result_3_reg_1060);

assign sext_ln198_4_fu_410_p1 = $signed(p_Result_4_reg_1065);

assign sext_ln198_5_fu_418_p1 = $signed(p_Result_5_reg_1070);

assign sext_ln198_6_fu_426_p1 = $signed(p_Result_6_reg_1075);

assign sext_ln198_7_fu_434_p1 = $signed(p_Result_7_reg_1080);

assign sext_ln198_fu_378_p1 = $signed(p_Result_s_reg_1045);

assign sext_ln813_1_fu_810_p1 = rhs_6_fu_798_p3;

assign sext_ln813_2_fu_530_p1 = lhs_2_fu_478_p3;

assign sext_ln813_3_fu_534_p1 = rhs_2_fu_522_p3;

assign sext_ln813_4_fu_654_p1 = lhs_5_fu_602_p3;

assign sext_ln813_5_fu_658_p1 = rhs_5_fu_646_p3;

assign sext_ln813_fu_806_p1 = lhs_6_fu_740_p3;

assign tmp_10_fu_630_p3 = p_Val2_5_fu_616_p2[32'd17];

assign tmp_2_fu_462_p3 = p_Val2_s_fu_448_p2[32'd17];

assign tmp_4_fu_506_p3 = p_Val2_1_fu_492_p2[32'd17];

assign tmp_8_fu_586_p3 = p_Val2_4_fu_572_p2[32'd17];

assign tmp_fu_868_p4 = {{p_Val2_9_fu_828_p2[17:8]}};

assign underflow_1_fu_763_p2 = (xor_ln896_1_fu_758_p2 & p_Result_25_reg_1193);

assign underflow_fu_705_p2 = (xor_ln896_fu_700_p2 & p_Result_21_reg_1173);

assign xor_ln302_1_fu_710_p2 = (p_Result_22_reg_1186 ^ p_Result_21_reg_1173);

assign xor_ln302_2_fu_714_p2 = (xor_ln302_1_fu_710_p2 ^ 1'd1);

assign xor_ln302_3_fu_768_p2 = (p_Result_26_reg_1206 ^ p_Result_25_reg_1193);

assign xor_ln302_4_fu_772_p2 = (xor_ln302_3_fu_768_p2 ^ 1'd1);

assign xor_ln302_fu_854_p2 = (p_Result_28_fu_834_p3 ^ p_Result_27_fu_820_p3);

assign xor_ln895_1_fu_690_p2 = (p_Result_21_reg_1173 ^ 1'd1);

assign xor_ln895_2_fu_748_p2 = (p_Result_25_reg_1193 ^ 1'd1);

assign xor_ln895_fu_842_p2 = (p_Result_27_fu_820_p3 ^ 1'd1);

assign xor_ln896_1_fu_758_p2 = (p_Result_26_reg_1206 ^ 1'd1);

assign xor_ln896_fu_700_p2 = (p_Result_22_reg_1186 ^ 1'd1);

assign zext_ln198_1_fu_389_p1 = $unsigned(sext_ln198_1_fu_386_p1);

assign zext_ln198_2_fu_397_p1 = $unsigned(sext_ln198_2_fu_394_p1);

assign zext_ln198_3_fu_405_p1 = $unsigned(sext_ln198_3_fu_402_p1);

assign zext_ln198_4_fu_413_p1 = $unsigned(sext_ln198_4_fu_410_p1);

assign zext_ln198_5_fu_421_p1 = $unsigned(sext_ln198_5_fu_418_p1);

assign zext_ln198_6_fu_429_p1 = $unsigned(sext_ln198_6_fu_426_p1);

assign zext_ln198_7_fu_437_p1 = $unsigned(sext_ln198_7_fu_434_p1);

assign zext_ln198_fu_381_p1 = $unsigned(sext_ln198_fu_378_p1);

assign zext_ln208_fu_886_p1 = p_Result_18_reg_1213;

assign zext_ln43_1_fu_445_p1 = exp_res_V_8_reg_1131;

assign zext_ln43_2_fu_486_p1 = exp_res_V_9_reg_1137;

assign zext_ln43_3_fu_489_p1 = exp_res_V_10_reg_1143;

assign zext_ln43_4_fu_566_p1 = exp_res_V_11_reg_1149;

assign zext_ln43_5_fu_569_p1 = exp_res_V_12_reg_1155;

assign zext_ln43_6_fu_610_p1 = exp_res_V_13_reg_1161;

assign zext_ln43_7_fu_613_p1 = exp_res_V_14_reg_1167;

assign zext_ln43_fu_442_p1 = exp_res_V_reg_1125;

endmodule //JetTaggerNN_softmax_latency_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config22_s
